# Path to your oh-my-zsh installation.
export ZSH=$HOME/.oh-my-zsh

# Which plugins would you like to load? (plugins can be found in ~/.oh-my-zsh/plugins/*)
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(brew docker git git-flow mercurial pip python)

source $ZSH/oh-my-zsh.sh

# User configuration
source "/opt/homebrew/opt/spaceship/spaceship.zsh"

export PATH=$PATH:/Users/dmilburn/src/projects/gitplus/commands
export GIT_MERGE_AUTOEDIT=no
export PATH=$PATH:$HOME/.nodenv/shims
export PATH=$PATH:/opt/vertica/bin
export ANSIBLE_ENV_PATH=/Users/dmilburn/src/projects/Ansible-Environments

[ -f /opt/hamurai/env.sh ] && source /opt/hamurai/env.sh
if which nodenv > /dev/null; then eval "$(nodenv init -)"; fi

# tabtab source for serverless package
# uninstall by removing these lines or running `tabtab uninstall serverless`
[[ -f /Users/dmilburn/.nodenv/versions/8.9.0/lib/node_modules/serverless/node_modules/tabtab/.completions/serverless.zsh ]] && . /Users/dmilburn/.nodenv/versions/8.9.0/lib/node_modules/serverless/node_modules/tabtab/.completions/serverless.zsh
# tabtab source for sls package
# uninstall by removing these lines or running `tabtab uninstall sls`
[[ -f /Users/dmilburn/.nodenv/versions/8.9.0/lib/node_modules/serverless/node_modules/tabtab/.completions/sls.zsh ]] && . /Users/dmilburn/.nodenv/versions/8.9.0/lib/node_modules/serverless/node_modules/tabtab/.completions/sls.zsh
export PATH="/usr/local/sbin:$PATH"

alias ag='ag --path-to-ignore ~/.ignore'

# tabtab source for slss package
# uninstall by removing these lines or running `tabtab uninstall slss`
[[ -f /Users/dmilburn/.nodenv/versions/8.11.0/lib/node_modules/serverless/node_modules/tabtab/.completions/slss.zsh ]] && . /Users/dmilburn/.nodenv/versions/8.11.0/lib/node_modules/serverless/node_modules/tabtab/.completions/slss.zsh

#export NPM_TOKEN=$(aws --profile msys ssm get-parameters --names /ac/npm-auth-token-secure --with-decryption | jq -r ".Parameters[0].Value")
